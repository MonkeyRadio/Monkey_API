swagger: '2.0'
info:
  description: MonkeyRadio API Documentation
  version: 2.0.0
  title: MonkeyRadio API
  contact:
    email: contact@monkeyradio.fr
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
schemes:
  - http
  - https
host: api.monkeyradio.fr
basePath: /api
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: >-
      Enter the token with the `Bearer: ` prefix, e.g. "Bearer abcde12345".
paths:
  /:
    get:
      summary: Template
      description: Response data template used in all api routes
      produces:
        - application/json
        - application/yaml
        - application/x-yaml
      tags:
        - Template
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              request:
                type: string
              data:
                type: object
              status:
                type: number
                example: 200
        '400':
          description: Bad Arguments
          schema:
            type: object
            properties:
              request:
                type: string
              errors:
                type: object
              status:
                type: number
                example: 400
        '500':
          description: Bad Arguments
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
                example: Internal Server Error
              status:
                type: number
                example: 500
  /radio:
    post:
      summary: Create a new radio
      description: Require 'radio.create' permission
      security:
        - Bearer: []
      produces:
        - application/json
        - application/yaml
        - application/x-yaml
      tags:
        - Radio
      parameters:
        - in: body
          name: body
          description: radio object
          required: true
          schema:
            $ref: '#/definitions/radio'
      responses:
        '201':
          description: successful operation
        '400':
          description: Invalid request body
        '500':
          $ref: '#/definitions/InternalError'
    get:
      summary: Get all the radios
      description: Public route - Get all the radios informations including 'slug', 'name', 'icon' and 'live' (all radio variants slug and name used to the CDN)
      tags:
        - Radio
      produces:
        - application/json
        - application/yaml
        - application/x-yaml
      responses:
        '200':
          description: Radio List
          schema:
            type: array
            items:
              $ref: '#/definitions/radio'
        '400':
          description: Invalid status value
          schema:
            $ref: '#/definitions/InvalidResponse'
        '500':
          $ref: '#/definitions/InternalError'
    delete:
      summary: Delete a radio
      description: Require 'radio.delete' permission
      security:
        - Bearer: []
      tags:
        - Radio
      produces:
        - application/json
        - application/yaml
        - application/x-yaml
      parameters:
        - in: body
          name: body
          description: radio slug
          required: true
          schema:
            slug:
              type: string
              description: radio slug
              required: true
      responses:
        '200':
          description: successful deleted - Created
        '400':
          description: Invalid request body
        '500':
          $ref: '#/definitions/InternalError'
  /radio/{slug}:
    get:
      summary: Get the radio represented by slug
      description: Get the radio represented by slug
      tags:
        - Radio
      parameters:
        - name: slug
          in: path
          description: radio slug
          required: true
          type: string
      produces:
        - application/json
        - application/yaml
        - application/x-yaml
      responses:
        '200':
          description: Radio data
          schema:
            $ref: '#/definitions/radio'
        '400':
          description: This radio does not exist or this slug is not valid
          schema:
            $ref: '#/definitions/InvalidResponse'
        '500':
          $ref: '#/definitions/InternalError'
    put:
      summary: Update radio
      description: Require 'radio.update' permission
      security:
        - Bearer: []
      produces:
        - application/json
        - application/yaml
        - application/x-yaml
      tags:
        - Radio
      parameters:
        - name: slug
          in: path
          required: true
          type: string
        - in: body
          name: body
          description: radio object
          required: true
          properties:
            name:
              type: string
              description: radio name
            icon:
              type: string
              description: radio icon
      responses:
        '202':
          description: successful operation
        '400':
          description: Invalid request body
        '500':
          $ref: '#/definitions/InternalError'

  /radio/{slug}/variant:
    post:
      summary: Add variant to a radio identified by {slug}
      description: Require 'radio.update' permission
      security:
        - Bearer: []
      produces:
        - application/json
        - application/yaml
        - application/x-yaml
      tags:
        - Radio
      parameters:
        - name: slug
          in: path
          required: true
          type: string
        - in: body
          name: body
          description: radio object
          required: true
          properties:
            slug:
              type: string
              required: true
              description: radio variant slug
            name:
              type: string
              required: true
              description: radio variant name
            icon:
              type: string
              required: true
              description: radio variant icon
      responses:
        '201':
          description: successful operation
        '400':
          description: Invalid request body
        '500':
          $ref: '#/definitions/InternalError'

  /radio/{radioSlug}/variant/{variantSlug}:
    put:
      summary: Update variant to a radio identified by {slug}
      description: Require 'radio.update' permission
      security:
        - Bearer: []
      produces:
        - application/json
        - application/yaml
        - application/x-yaml
      tags:
        - Radio
      parameters:
        - in: path
          name: radioSlug
          required: true
          description: radio slug
        - in: path
          name: variantSlug
          required: true
          description: radio variant slug
        - in: body
          name: body
          description: radio variant object
          required: true
          properties:
            name:
              type: string
              description: radio variant name
              required: false
            icon:
              type: string
              description: radio variant icon
              required: false
      responses:
        '202':
          description: successful operation
        '400':
          description: Invalid request body
        '500':
          $ref: '#/definitions/InternalError'
    delete:
      summary: Delete variant to a radio identified by {slug}
      description: Require 'radio.update' permission
      security:
        - Bearer: []
      produces:
        - application/json
        - application/yaml
        - application/x-yaml
      tags:
        - Radio
      parameters:
        - in: path
          name: radioSlug
          required: true
          description: radio slug
        - in: path
          name: variantSlug
          required: true
          description: radio variant slug
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid request body
        '500':
          $ref: '#/definitions/InternalError'

  /auth/login:
    post:
      summary: Login with your Monkey Account
      description: You must have valid and active account
      tags:
        - User
      parameters:
        - name: username
          in: formData
          required: true
          type: string
        - name: password
          in: formData
          required: true
          type: string
      produces:
        - application/json
        - application/yaml
        - application/x-yaml
      responses:
        '200':
          description: Login Success
          schema:
            $ref: '#/definitions/authToken'
        '401':
          description: Wrong username or password
        '400':
          description: Bad Parameters
        '500':
          $ref: '#/definitions/InternalError'
  /auth/register:
    post:
      summary: Register your Monkey Account
      description: Register a new Monkey Account
      tags:
        - User
      parameters:
        - name: username
          description: Must be unique
          in: formData
          required: true
          type: string
        - name: email
          in: formData
          required: true
          type: string
        - name: password
          in: formData
          required: true
          type: string
      produces:
        - application/json
        - application/yaml
        - application/x-yaml
      responses:
        '201':
          description: Registering success
          schema:
            $ref: '#/definitions/authToken'
        '401':
          description: Unauthorized to register, please contact an administrator
        '400':
          description: Bad Parameters
        '500':
          $ref: '#/definitions/InternalError'
  /auth/infos:
    get:
      summary: Get Account informations
      description: Get Account informations related to the Access Token given in authorization header
      tags:
        - User
      security:
        - Bearer: []
      produces:
        - application/json
        - application/yaml
        - application/x-yaml
      responses:
        '200':
          description: Account data
        '401':
          description: Unauthorized
        '500':
          $ref: '#/definitions/InternalError'
  /auth/update:
    put:
      summary: Update account information
      description: Set any information in the account associated by the Bearer token provided in Authorization header
      tags:
        - User
      security:
        - Bearer: []
      parameters:
        - name: user
          in: body
          required: true
          type: object
          properties:
            email:
              type: string
              required: false
            avatar:
              type: string
              required: false
            password:
              type: string
              required: false
      produces:
        - application/json
        - application/yaml
        - application/x-yaml
      responses:
        '202':
          description: Request has been executed without error but cannot guarantee results
        '401':
          description: Unauthorized
        '400':
          description: Bad Parameters
        '500':
          $ref: '#/definitions/InternalError'
  /auth/permission/{username}:
    put:
      summary: Add permission to a user
      description: "Require permission: 'admin'"
      tags:
        - User
      security:
        - Bearer: []
      parameters:
        - name: username
          in: path
          required: true
          type: string
          description: UserName
        - name: permission
          in: formData
          required: true
          type: string
      produces:
        - application/json
        - application/yaml
        - application/x-yaml
      responses:
        '202':
          description: Request has been executed without error but cannot guarantee results
        '401':
          description: Unauthorized
        '400':
          description: Bad Parameters
        '500':
          $ref: '#/definitions/InternalError'
    delete:
      summary: Delete permission to a user
      description: "Require permission: 'admin'"
      tags:
        - User
      security:
        - Bearer: []
      parameters:
        - name: username
          in: path
          required: true
          type: string
          description: UserName
        - name: user
          in: formData
          required: true
          type: string
      produces:
        - application/json
        - application/yaml
        - application/x-yaml
      responses:
        '202':
          description: Request has been executed without error but cannot guarantee results
        '401':
          description: Unauthorized
        '400':
          description: Bad Parameters
        '500':
          $ref: '#/definitions/InternalError'
  /auth/renewToken:
    post:
      summary: Renew Access Token with Renew Token
      description: 'Use your Renew Token to get a new Access Token<br/>Warning : Token cannot be renewed if the family has expired or has been destroyed earlier'
      tags:
        - User
      parameters:
        - name: refreshToken
          in: formData
          required: true
          type: string
      produces:
        - application/json
        - application/yaml
        - application/x-yaml
      responses:
        '200':
          description: 'Renewing success, got new Access Token and new Renew Token'
          schema:
            $ref: '#/definitions/authToken'
        '401':
          description: Token is not valid anymore
        '400':
          description: Bad Parameters
        '500':
          $ref: '#/definitions/InternalError'
  /auth/destroyTokenFamily:
    post:
      summary: Destroy actual token passed in Authorization header and all this token family
      description: "This will destroy all the token family including all actual Access and Refresh token.<br/>In others terms, this will logout all instances of this user using THIS token family!<br/>This will not logout others tokens related to the user's token."
      tags:
        - User
      security:
        - Bearer: []
      responses:
        '200':
          description: Success destroying token family, you're logout
        '401':
          description: Token is not valid
        '500':
          $ref: '#/definitions/InternalError'

  /artist:
    post:
      summary: Add new artist in the database
      description: "Require permission : 'artist.create'"
      tags:
        - Artist
      security:
        - Bearer: []
      parameters:
        - name: artist
          in: body
          required: true
          type: object
          schema:
            $ref: '#/definitions/Artist'
      responses:
        '201':
          description: Artist added
        '400':
          description: Bad Parameters
        '500':
          $ref: '#/definitions/InternalError'

  /artist/{slug}:
    get:
      summary: Get artist information
      description: "All informations about an artist slug"
      tags:
        - Artist
      parameters:
        - name: slug
          in: path
          required: true
          type: string
      produces:
        - application/json
        - application/yaml
        - application/x-yaml
      responses:
        '200':
          description: Artist information
          schema:
            type: object
            properties:
              artist:
                $ref: '#/definitions/Artist'
        '404':
          description: Artist not found
        '400':
          description: Bad Parameters
        '500':
          $ref: '#/definitions/InternalError'
    put:
      summary: Update artist
      description: "Set any information in the artist associated by the slug given in path<br/>Require permission : 'artist.update'"
      security:
        - Bearer: []
      tags:
        - Artist
      parameters:
        - name: slug
          in: path
          required: true
          type: string
        - name: artist
          in: body
          required: true
          type: object
          properties:
            name:
              type: string
              required: false
            spotifyID:
              type: string
              required: false
            deezerID:
              type: string
              required: false
            appleMusicID:
              type: string
              required: false
      responses:
        '202':
          description: Artist Updated without error but cannot guarantee results.
        '400':
          description: Bad Parameters
        '500':
          $ref: '#/definitions/InternalError'
    delete:
      summary: "Delete Artist"
      description: "Require permission : 'artist.delete'"
      tags:
        - Artist
      security:
        - Bearer: []
      parameters:
        - name: slug
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Artist Deleted
        '400':
          description: Bad Parameters
        '500':
          $ref: '#/definitions/InternalError'

  /single:
    post:
      summary: "Add new single in the database"
      description: "Require permission : 'single.create'"
      tags:
        - Single
      security:
        - Bearer: []
      parameters:
        - name: single
          in: body
          type: object
          required: true
          properties:
            slug:
              type: string
              required: true
            name:
              type: string
              required: true
            artist:
              type: object
              properties:
                slug:
                  type: string
                  required: true
                contributors:
                  type: array
                  items:
                    - slug:
                      type: string
                  required: false
            duration:
              type: number
              required: true
            spotifyID:
              type: string
              required: false
            deezerID:
              type: string
              required: false
            appleMusicID:
              type: string
              required: false
      responses:
        '201':
          description: Single created
        '400':
          description: Bad Parameters
        '500':
          $ref: '#/definitions/InternalError'

  /single/{slug}:
    get:
      summary: Get single information
      tags:
        - Single
      parameters:
        - name: slug
          in: path
          required: true
          type: string
      produces:
        - application/json
        - application/yaml
        - application/x-yaml
      responses:
        '200':
          description: Single information
          schema:
            type: object
            properties:
              single:
                $ref: '#/definitions/Single'
        '404':
          description: Single not found
        '400':
          description: Bad Parameters
        '500':
          $ref: '#/definitions/InternalError'

    put:
      summary: "Update single"
      description: "Require permission : 'single.update'"
      tags:
        - Single
      security:
        - Bearer: []
      parameters:
        - name: slug
          in: path
          required: true
          type: string
        - name: single
          in: body
          type: object
          required: true
          properties:
            name:
              type: string
              required: true
            artist:
              type: object
              properties:
                slug:
                  type: string
                  required: true
                contributors:
                  type: array
                  items:
                    - slug:
                      type: string
                  required: false
            duration:
              type: number
              required: true
            spotifyID:
              type: string
              required: false
            deezerID:
              type: string
              required: false
            appleMusicID:
              type: string
              required: false
      responses:
        '202':
          description: Single updated
        '400':
          description: Bad Parameters
        '500':
          $ref: '#/definitions/InternalError'
    delete:
      summary: "Delete single"
      description: "Require permission : 'single.delete'"
      tags:
        - Single
      security:
        - Bearer: []
      parameters:
        - name: slug
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Single Deleted
        '400':
          description: Bad Parameters
        '500':
          $ref: '#/definitions/InternalError'

definitions:
  radioVariant:
    type: object
    properties:
      slug:
        type: string
      name:
        type: string
      icon:
        type: string
  radio:
    type: object
    properties:
      slug:
        type: string
        description: radio slug
        required: true
      name:
        type: string
        description: radio name
      icon:
        type: string
        description: radio icon
      variants:
        type: array
        items:
          $ref: '#/definitions/radioVariant'
  authToken:
    type: object
    properties:
      token:
        type: string
      expUTC:
        type: string
      refreshToken:
        type: string
      refreshExpUTC:
        type: string
  Artist:
    type: object
    properties:
      slug:
        type: string
        required: true
      name:
        type: string
        required: true
      spotifyID:
        type: string
        required: false
      deezerID:
        type: string
        required: false
      appleMusicID:
        type: string
        required: false
  Single:
    type: object
    properties:
      slug:
        type: string
        required: true
      name:
        type: string
        required: true
      artist:
        type: object
        properties:
          main:
            $ref: '#/definitions/Artist'
          contributors:
            type: array
            items:
              $ref: '#/definitions/Artist'
      duration:
        type: number
        required: true
      spotifyID:
        type: number
        required: false
      deezerID:
        type: number
      appleMusicID:
        type: number
        required: false
  InvalidResponse:
    type: object
    properties:
      message:
        type: string
  InternalError:
    description: Internal Server Error
